/* 10/14/24 */

* { /* Asterisk means style for everything in page */
    box-sizing: border-box; /* determines the width and height of element. set width/height to include both content area and padding/border */
    margin: 0;
    padding: 0;
    font-family: 'Kumbh Sans', sans-serif;  /* 'Kumbh Sans' refers to the Google font we search up, referenced in the HTML */
    /* "google fonts kumbh" and get the embed link, reference in HTML in head */
}

/* ----------------------------------------- HOME PAGE ----------------------------------------- */

/* Navbar CSS */
/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES THE NAViGATION BAR */
.navbar {   /* NOTE: the nav element is apparently bigger than the child div */
    /* background: #a02929; DELETE */
    display: flex;  /* make navigation section a flexbox, 1-D */
    justify-content: center;
    align-items: center;
    height: 80px;

    position: sticky;   /* Navigation bar specific, it should always be present in view positioned at the top */
    top: 0; /* this is required to keep the bar sticky. says that the navbar is spaced 0 units from the top of the page */
}

.navbar__container {    /* configures the separation of the items in the navbar */
    /* background: #131313; DELETE */
    display: flex;
    justify-content: space-between; /* keeps the logo on the left, and list on the right */
    align-items: center;
    height: 100%;
    width: 100%;
    flex-direction: row;    /* organizes the navbar into a 1-D row */

}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES THE NAVBAR IMAGE */
.navbar__img--container {
    height: 100%;
    left: 0;
}

#navbar__logo { /* the logo of the site. Will be a part of the navigation bar, but not part of menu class */
    height: 100%;   /* image actually is bigger than div container, so have to set it manually */
}

.navbar__menu {
    background: #7ae770;
    display: flex;
    align-items: center;
    /* text-align: center; */
    flex-direction: row;
    height: 80px;
    
    
    list-style: none;   /* Menu specific. Gets rid of bullet point in front of list items */
}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES THE NAVBAR ITEMS */
.navbar__item {
    background: #8a3535;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 10px;
    text-decoration: none;
    padding: 0 1rem;
}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES THE NAVBAR LINK BUTTONS */
.navbar__links {    /* configures the button links to other pages */
    background: #131313;
    color: #fff;
    text-decoration: none;
    cursor: pointer;
    
    /* Not sure if necessary */
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    padding: 0 1rem;
}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES THE NAVBAR "PLAY NOW" BUTTON */
.navbar__btn {  /* configures the Play button with blue gradient */
    background-image: linear-gradient(to right, #add8e6 0%, #677de0 100%);
    cursor: pointer;
    height: 60px;
    width: 100px;    /* make the button fatter than the link buttons */
}

.navbar__btn a {  /* configures the text of the button to be white */
    color: #fff;
    text-decoration: none;  /* removes the text underline */
}

/* Description CSS */
.main {
    background-color: grey;
}

.main__container {  /* organizes the information blocks (aka services cards) into 1D column */
    display: flex;
    flex-direction: column;
}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES EACH INFORMATION BLOCK (THINK OF SERVICES CARDS) */
.main__content {
    display: grid;
    justify-items: center;
    align-items: center;
    grid-template-columns: 1fr 1fr;
    /* grid-auto-rows: 525px; DELETE */
}

#main__content--flipped {   /* reverses the image and text for the second information block */
    /* display: grid;
    justify-items: center;
    align-items: center;
    grid-template-columns: 1fr 1fr; DELETE */
    direction: rtl; /* this is used to reverse grids. Stands for right-to-left */
}

.main__text {
    background-color: red;
    color: #fff;
    height: 17.3vw; /* this allows the information block to scale based on screen resolution. we use viewport width because we want the height of the information block to be adjusted only when the screen width shrinks */
    width: 100%;
    /*float: inline-end;*/  /* TODO: HAVE ALL TEXT TOWARDS CENTER AXIS. FLOAT RIGHT? */
}

.main__text h1 {   /* give h1 text an underline */
    margin-bottom: 1vw;   /* keeps the "Anime" text from "30,000+ Songs From 7000+ Anime" from constantly spazzing out when changing browser width */
    text-decoration: underline;
    float: inline-end;  /* keeps h1 text near center axis */
    font-size: 2vw; /* this allows the text to scale based on screen resolution. we use viewport width because we want the height of the text to be adjusted only when the screen width shrinks */
}

/* TODO: KEEP H2 TEXT NEAR CENTER AXIS AS WELL */
.main__text h2 {
    margin-top: 2.5vw;    /* creates a gap between text. this allows the gap between text to scale based on screen resolution. we use viewport width because we want the height of the text to be adjusted only when the screen width shrinks */
    font-size: 1.5vw;    /* this allows the text to scale based on screen resolution. we use viewport width because we want the height of the text to be adjusted only when the screen width shrinks */
    /*float: inline-start;*/    /* keeps h2 text away from center axis, towards edge */
}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES EACH INFORMATION BLOCK IMAGE */
.main__img--container {
    background-color: rgb(134, 72, 134);
    height: 27.3vw; /* this allows the image to scale based on screen resolution. we use viewport width because we want the height of the image to be adjusted only when the screen width shrinks */
    /* height: 525px; */
    width: 100%;
}

.main__img {
    height: 100%;
    width: auto;
}

/* CONTROLLER: THE SELECTOR THAT MAINTAINS SCALABILITY
SCALES THE INFORMATION BLOCK "GO BACK TO THE TOP" BUTTON */
.main__btn {  /* configures the Go button with blue gradient */
    background-image: linear-gradient(to right, #add8e6 0%, #677de0 100%);
    cursor: pointer;
    height: 100px;
    width: 400px;
    /* NOTE: another way to center an item is to set both margin-left and margin-right to auto */
    margin: 0 auto; /* another way of centering an item. this positions the button on the center axis */
    /* float: right; */
    /*margin-left: 745px;*/ /* centers the button by creating space from left margin */
    /* TODO: HAVE BUTTON SCROLL TO TOP WHEN CLICKED. REQUIRES JAVASCRIPT */
}

.main__btn p {  /* configures the text of the button to be white */
    color: #fff;
    font-size: 34px;
}

/* FOOTER CSS */
.footer {   /* not really necessary to make it a flex because there is only one item, the "footer__container" div */
    background: #131313;
    /* background-color: rgb(255, 231, 185); DELETE */
    display: flex;
    justify-content: center;
    align-items: center;
}

.footer__container {    /* lists the links and the copyright into a 1-D row */
    display: flex;
    justify-content: center;
    align-items: center;
}

.footer__links--container { /* lists the links groups into a 1-D row */
    /* background-color: rgb(255, 193, 234); */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* NOTE: when you are using function nth-child(), you are NOT referencing A child of said attribute/class/id,
but rather you are referencing some element WITH said attribute/class/id, WHICH IS the nth child of some higher, unspecified parent */
/* NOTE: the selector :last-child does NOT work if the element is not the VERY LAST element in the container
good resource on this: https://stackoverflow.com/questions/18995362/last-child-not-working-as-expected */
/* .footer__links:nth-child(1) {
    background-color: #677de0;
    margin: 0 50px;
}
.footer__links:nth-child(2) {
    background-color: #677de0;
    margin: 0 50px;
}
.footer__links:nth-child(3) {
    background-color: #677de0;
    margin: 0 50px;
} */

.footer__links {    /* lists the links into a 1-D column */
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    /* instead of accessing each child like above, just access them all with this line */
    background-color: #677de0;
    margin: 0 50px;
}

.footer__links h2 {
    color: #fff;
    font-size: 0.85vw;
}

.footer__links a {
    font-size: 0.85vw;
    text-decoration: none;  /* removes the underline */
}

.copyright {
    background-color: #74a5a8;
    color: #fff;
    justify-content: center;
    align-items: center;
    font-size: 1.6vw;
}

/* TODO: CHANGE ALL OF THE VW SCALING SO THAT INSTEAD OF SHRINKING ANYTIME THE BROWSER WIDTH SHRINKS,
IT ONLY REACTS TO BROWSER SHRINKING AFTER BROWSER WIDTH REACHES A CERTAIN WINDOW WIDTH THRESHOLD */

/* 10/17/24 */

/* ----------------------------------------- LOGIN PAGE ----------------------------------------- */

/* Login CSS */
.login {   /* not really necessary to make it a flex because there is only one item, the "login__container" div */
    background-color: rgb(141, 194, 255);
    /* background-color: rgb(255, 231, 185); DELETE */
    display: flex;
    justify-content: center;
    align-items: center;
}

.login__container { /* separates the login box and the "Go Back To The Top" button into a 1-D column */
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.login__content {   /* the actual login box that holds all of the login input fields. separates them into a 1-D column */
    background-color: grey;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.login__text {
    color: #fff;
}

.login__cards { /* the username/password input fields and all of their labels. like services cards, they are separated into a 1-D row */
    background-color: blue;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* REDACTED */
.login__cards--content {
    /* the labels are already creating space */
    /*margin: 0 10px;*/ /* create spacing between the username and password input fields */
}

/* resource for selecting a label in CSS:
https://stackoverflow.com/questions/2599627/how-to-select-label-for-xyz-in-css */
label[for="input__username"] {
    color: #fff;
    margin: 0 50px; /* centers the text */
}
label[for="input__checkbox"] {
    color: #fff;
    background-color: #131313;
    /*margin-right: 73px;*/  /* creates space between checkbox and button */
    cursor: pointer;
}
label[for="input__password"] {
    color: #fff;
    margin: 0 50px; /* centers the text */
}

.checkbox__container {
    background-color: #131313;
    margin-right: 73px;  /* creates space between checkbox and button */
}

.submit__btn {  /* the "Login" button */
    background-color: #91d2e7;
    margin-top: 15px;   /* shifts the button downwards so that top aligns with the checkbox */
    margin-left: 52px;  /* creates space between button and checkbox. aligns with the password text field */
    height: 30px;
    width: 80px;
    float: right;   /* shifts login button all the way to the right of the container */
    /*margin-right: 11px; REDACTED*/ /* shifts login button a little to the left to align with the password text field */
    cursor: pointer;
    border-radius: 15%; /* creates a circular padding on the button */
    /* TODO: CREATE A HOVER TRANSITION FROM BLUE TO LIGHTER BLUE */
}

.submit__btn:hover {       /* hover effect: from blue to light blue */
    background-color: #add8e6;
}

/* TODO (FIXED!): CHANGE THE FORM TAG LOCATION IN THE HTML. CURRENTLY ALL BUTTONS ARE AFFECTING THE LOGIN. BAD! */

.login__forgot--container {    /* separates the "Forgot password" and "Forgot username" buttons */
    background-color: #85a765;
    display: flex;
    justify-content: space-evenly;  /* centers and spaces the "Forgot..." buttons evenly */
    align-items: center;
    width: 100%;    /* expands the container width outwards to help with spacing buttons */
}

.hud__btn { /* these buttons will pull up a new hud and NOT go to a new page. ex: the Create Account hud */
    color: #677de0;
    background-color: transparent;  /* removes button color */
    border: none;   /* removes the black line in the outer edges of button */
    cursor: pointer;
}

.hud__btn:hover {   /* hover effect: from blue to dark blue */
    color: rgb(49, 79, 214);
}

.login__links { /* separates the socials links into a 1-D row */
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    width: 100%;    /* expands the container width outwards to help with spacing buttons */
    flex-direction: row;
}

.login__links--border { /* creates a circular border for each socials icon */
    background: #131313;
    align-items: start;
    height: 46px;
    width: 46px;
    opacity: 0.5;
    border-radius: 100%;    /* circular border effect */
    /* TODO (FIXED!): INCREASE SIZE OF CIRCULAR BORDERS AND ICONS */
}

.login__links a {   /* the socials icons for the login HUD */
    color: #fff;    /* changes the color of the icons to white */
    font-size: 33px;
    margin-top: 100px;
    text-decoration: none;  /* removes the underline */
    /* TODO: CENTER THE SOCIALS LINKS BETTER */
}

.fab.fa-youtube {
    margin-left: 5px;
}

.fab.fa-facebook {
    margin-left: 7px;
}

.fab.fa-twitter {
    margin-left: 6px;
}

.fab.fa-discord {
    margin-left: 8px;
}